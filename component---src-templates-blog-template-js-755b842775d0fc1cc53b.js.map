{"version":3,"sources":["webpack:///./src/components/LabelList.js","webpack:///./src/templates/blogTemplate.js"],"names":["useStyles","makeStyles","labels","display","label","justifyContent","alignItems","width","height","marginRight","backgroundColor","border","LabelList","classes","Box","className","map","Label","Template","markdownRemark","data","html","frontmatter","title","mean","origin","pronunciation","relation","content","split","AppFrame","style","marginBottom","SearchBar","marginLeft","component","dangerouslySetInnerHTML","__html","value","index","startsWith","pageQuery"],"mappings":"qOAIMA,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,QAAS,QAEXC,MAAO,CACLD,QAAS,OACTE,eAAgB,SAChBC,WAAY,SACZC,MAAO,GACPC,OAAQ,GACRC,YAAa,EACbC,gBAAiB,YACf,OAD8B,EAAZN,OAEhB,IAAK,SACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,SACH,MAAO,UACT,IAAK,WACH,MAAO,UACT,IAAK,UACH,MAAO,YAGbO,OAAQ,oBAIG,SAASC,EAAT,GAAgC,IAAXV,EAAU,EAAVA,OAC5BW,EAAUb,IAChB,OACE,oCACE,kBAACc,EAAA,EAAD,CAAKC,UAAWF,EAAQX,QACrBA,EAAOc,KAAI,SAAAZ,GAAK,OACf,kBAAC,EAAD,CAAOA,MAAOA,SAOxB,IAAMa,EAAQ,SAAC,GAAe,IAAbb,EAAY,EAAZA,MACTS,EAAUb,EAAU,CAAEI,UAC5B,OAAO,yBAAKW,UAAWF,EAAQT,OAAQA,I,kCCxC1B,SAASc,EAAT,GAEX,IACMC,EADP,EADDC,KAEQD,eAENE,EAEEF,EAFFE,KAHD,EAKGF,EADFG,YAAeC,EAJhB,EAIgBA,MAAOnB,EAJvB,EAIuBA,MAAOoB,EAJ9B,EAI8BA,KAAMC,EAJpC,EAIoCA,OAAQC,EAJ5C,EAI4CA,cAAeC,EAJ3D,EAI2DA,SAGtDC,EAAUP,EAAKQ,MAAM,aAAa,GAAGA,MAAM,aAAa,GAC9D,OACE,kBAACC,EAAA,EAAD,KACE,yBACEC,MAAO,CAAE5B,QAAS,OAAQE,eAAgB,SAAU2B,aAAc,KAElE,kBAACC,EAAA,EAAD,OAEF,kBAACnB,EAAA,EAAD,CAAKiB,MAAO,CAAEG,WAAY,KACxB,kBAACpB,EAAA,EAAD,CAAKqB,UAAU,MAAMZ,GACrB,kBAACX,EAAD,CAAWV,OAAQE,IAEnB,kBAACU,EAAA,EAAD,CAAKqB,UAAU,MAAf,MACA,kBAACrB,EAAA,EAAD,KAAMU,GAEN,kBAACV,EAAA,EAAD,CAAKqB,UAAU,MAAf,MACA,kBAACrB,EAAA,EAAD,KAAMW,GAEN,kBAACX,EAAA,EAAD,CAAKqB,UAAU,MAAf,MACA,kBAACrB,EAAA,EAAD,KAAMY,GAEN,kBAACZ,EAAA,EAAD,CAAKqB,UAAU,MAAf,MACA,yBACEpB,UAAU,oBACVqB,wBAAyB,CAAEC,OAAQT,KAErC,kBAACd,EAAA,EAAD,CAAKqB,UAAU,MAAf,SACCR,GACCA,EAASX,KAAI,SAACsB,EAAOC,GAAR,OACX,yBAAKR,MAAO,CAAEC,aAAc,KACzBM,EAAME,WAAcD,EAAQ,EAA5B,KACGD,EACGC,EAAQ,EAFd,KAEoBD,QAQ5B,IAAMG,EAAS,c","file":"component---src-templates-blog-template-js-755b842775d0fc1cc53b.js","sourcesContent":["import React from \"react\"\nimport { Box } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  labels: {\n    display: \"flex\",\n  },\n  label: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 80,\n    height: 25,\n    marginRight: 5,\n    backgroundColor: ({ label }) => {\n      switch (label) {\n        case \"Common\":\n          return \"#FDFD96\"\n        case \"Frontend\":\n          return \"#ADD8E6\"\n        case \"Devops\":\n          return \"#B399D4\"\n        case \"Database\":\n          return \"#FF6961\"\n        case \"Backend\":\n          return \"#77DD77\"\n      }\n    },\n    border: \"2px solid #000\",\n  },\n})\n\nexport default function LabelList({ labels }) {\n  const classes = useStyles()\n  return (\n    <>\n      <Box className={classes.labels}>\n        {labels.map(label => (\n          <Label label={label} />\n        ))}\n      </Box>\n    </>\n  )\n}\n\nconst Label = ({ label }) => {\n  const classes = useStyles({ label })\n  return <div className={classes.label}>{label}</div>\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Box } from \"@material-ui/core\"\nimport LabelList from \"../components/LabelList\"\nimport AppFrame from \"../components/Layout/AppFrame\"\nimport SearchBar from \"../components/Forms/SearchBar\"\nimport css from \"../../static/css.css\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const {\n    html,\n    frontmatter: { title, label, mean, origin, pronunciation, relation },\n  } = markdownRemark\n\n  const content = html.split(\"<content>\")[1].split(\"</content\")[0]\n  return (\n    <AppFrame>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", marginBottom: 50 }}\n      >\n        <SearchBar />\n      </div>\n      <Box style={{ marginLeft: 15 }}>\n        <Box component=\"h1\">{title}</Box>\n        <LabelList labels={label} />\n\n        <Box component=\"h2\">의미</Box>\n        <Box>{mean}</Box>\n\n        <Box component=\"h2\">원형</Box>\n        <Box>{origin}</Box>\n\n        <Box component=\"h2\">발음</Box>\n        <Box>{pronunciation}</Box>\n\n        <Box component=\"h2\">설명</Box>\n        <div\n          className=\"blog-post-content\"\n          dangerouslySetInnerHTML={{ __html: content }}\n        />\n        <Box component=\"h2\">관련 기술</Box>\n        {relation &&\n          relation.map((value, index) => (\n            <div style={{ marginBottom: 10 }}>\n              {value.startsWith(`${index + 1}.`)\n                ? value\n                : `${index + 1}. ${value}`}\n            </div>\n          ))}\n      </Box>\n    </AppFrame>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        label\n        mean\n        origin\n        pronunciation\n        relation\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}